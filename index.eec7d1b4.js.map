{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,G,E,I,A,W,M,A,U,wI,G,CCEA,IAwCQ,EAxCF,EAAO,SAAS,IAAI,CACpB,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAc,EAAM,KAAK,CACzB,EAAY,EAAM,OAAO,CAAC,EAAE,CAC9B,EAAkB,CAAA,EAChB,GAqCJ,CAFM,EAAU,SAAS,aAAa,CAAC,SAE/B,SAAS,CAAG,oBAEpB,EAAQ,SAAS,CAAI,k2BA6Bd,GAnEH,EAAsB,CAC1B,gBAAiB,CACf,MAAO,kBACP,YAAa,uBACb,KAAM,SACR,EACA,iBAAkB,CAChB,MAAO,gBACP,YAAa,gCACb,KAAM,OACR,EACA,iBAAkB,CAChB,MAAO,aACP,YAAa,mDACb,KAAM,OACR,EACA,gBAAiB,CACf,MAAO,YACP,YAAa,gCACb,KAAM,OACR,EACA,qBAAsB,CACpB,MAAO,iBACP,YAAa,gCACb,KAAM,OACR,CACF,EAkEA,SAAS,EAAgB,CAAc,EACrC,OAAO,WAAW,EAAe,OAAO,CAAC,QAAS,IACpD,CA8CA,SAAS,EAAiB,CAAO,EAC/B,IAAQ,EAA6B,EAA7B,KAAA,CAAO,EAAsB,EAAtB,WAAA,CAAa,EAAS,EAAT,IAA5B,CACM,EAAa,SAAS,aAAa,CAAC,OAE1C,EAAW,SAAS,CAAC,GAAG,CAAC,eAAgB,GACzC,EAAW,YAAY,CAAC,UAAW,gBAEnC,EAAW,SAAS,EAAK,2BAElB,MAAA,CADe,EAAM,kBACT,MAAA,CAAZ,EAAY,YAGnB,SAAS,IAAI,CAAC,WAAW,CAAC,GAE1B,WAAW,WACT,EAAW,MAAM,EACnB,EAAG,IACL,C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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar body = document.body;\nvar table = document.querySelector(\"table\");\nvar tableHeader = table.tHead;\nvar tableBody = table.tBodies[0];\nvar descendingOrder = false;\nvar form = createForm();\nvar notificationMessage = {\n    SuccsessMessage: {\n        title: \"Success message\",\n        description: \"Employee was created\",\n        type: \"success\"\n    },\n    MainErrorMessage: {\n        title: \"Error message\",\n        description: \"All filleds must be completed\",\n        type: \"error\"\n    },\n    WrongNameMessage: {\n        title: \"Wrong name\",\n        description: \"The user name must contain at least 4 characters\",\n        type: \"error\"\n    },\n    WrongAgeMessage: {\n        title: \"Wrong age\",\n        description: \"Age must be between 18 and 90\",\n        type: \"error\"\n    },\n    WrongPositionMessage: {\n        title: \"Wrong position\",\n        description: \"Please write correct position\",\n        type: \"error\"\n    }\n};\nvar AGE_COLUMN_INDEX = 3;\nvar SALARY_COLUMN_INDEX = 4;\nvar SALARY_FIELD_NAME = \"salary\";\nbody.append(form);\nfunction createForm() {\n    var newForm = document.createElement(\"form\");\n    newForm.classList = \"new-employee-form\";\n    newForm.innerHTML = '\\n    <label>\\n      Name: <input name=\"name\" type=\"text\" data-qa=\"name\" >\\n    </label>\\n    <label>\\n      Position: <input name=\"position\" type=\"text\" data-qa=\"position\" >\\n    </label>\\n    <label>\\n      Office:\\n        <select name=\"office\" data-qa=\"office\">\\n          <option value=\"Tokyo\">Tokyo</option>\\n          <option value=\"Singapore\">Singapore</option>\\n          <option value=\"London\">London</option>\\n          <option value=\"New York\">New York</option>\\n          <option value=\"Edinburgh\">Edinburgh</option>\\n          <option value=\"San Francisco\">San Francisco</option>\\n        </select>\\n    </label>\\n    <label>\\n      Age: <input name=\"age\" type=\"number\" data-qa=\"age\" >\\n    </label>\\n    <label>\\n      Salary: <input name=\"salary\" type=\"number\" data-qa=\"salary\" >\\n    </label>\\n    <button>\\n      Save to table\\n    </button>\\n  ';\n    return newForm;\n}\nfunction sortTable(index) {\n    var _tableBody;\n    var sortedTable = _to_consumable_array(tableBody.rows).sort(function(a, b) {\n        var valueA = a.children[index].innerText;\n        var valueB = b.children[index].innerText;\n        var sortOrderMultiplier = descendingOrder ? -1 : 1;\n        if (index > 2) return sortOrderMultiplier * (convertToNumber(valueA) - convertToNumber(valueB));\n        return descendingOrder ? valueB.localeCompare(valueA) : valueA.localeCompare(valueB);\n    });\n    tableBody.innerHTML = \"\";\n    (_tableBody = tableBody).append.apply(_tableBody, _to_consumable_array(sortedTable));\n    descendingOrder = !descendingOrder;\n}\nfunction convertToNumber(currencyString) {\n    return parseFloat(currencyString.replace(/[$,]/g, \"\"));\n}\nfunction handleFormSubmit() {\n    var data = new FormData(form);\n    var _Object_fromEntries = Object.fromEntries(data.entries()), newName = _Object_fromEntries.name, position = _Object_fromEntries.position, age = _Object_fromEntries.age, office = _Object_fromEntries.office, salary = _Object_fromEntries.salary;\n    if (!newName || !age || !position || !salary) return showNotification(notificationMessage.MainErrorMessage);\n    if (newName.length < 4) return showNotification(notificationMessage.WrongNameMessage);\n    if (!isNaN(position)) return showNotification(notificationMessage.WrongPositionMessage);\n    if (age < 18 || age > 90) return showNotification(notificationMessage.WrongAgeMessage);\n    showNotification(notificationMessage.SuccsessMessage);\n    tableBody.insertAdjacentHTML(\"afterbegin\", \"\\n      <tr>\\n        <td>\".concat(newName, \"</td>\\n        <td>\").concat(position, \"</td>\\n        <td>\").concat(office, \"</td>\\n        <td>\").concat(age, \"</td>\\n        <td>$\").concat(salary, \"</td>\\n      </tr>\\n    \"));\n    form.reset();\n}\nfunction showNotification(message) {\n    var title = message.title, description = message.description, type = message.type;\n    var elementBox = document.createElement(\"div\");\n    elementBox.classList.add(\"notification\", type);\n    elementBox.setAttribute(\"data-qa\", \"notification\");\n    elementBox.innerHTML += '\\n    <h2 class=\"title\">'.concat(title, \"</h2>\\n    <p>\").concat(description, \"</p>\\n  \");\n    document.body.appendChild(elementBox);\n    setTimeout(function() {\n        elementBox.remove();\n    }, 2000);\n}\nfunction handeleDoubleClick(target) {\n    var age = target.parentElement.children[AGE_COLUMN_INDEX];\n    var salary = target.parentElement.children[SALARY_COLUMN_INDEX];\n    var originalText = target.innerText;\n    var newInput = document.createElement(\"INPUT\");\n    newInput.value = originalText;\n    newInput.classList.add(\"cell-input\");\n    newInput.setAttribute(\"name\", tableHeader.rows[0].cells[target.cellIndex].innerText.toLocaleLowerCase());\n    if (target === age) newInput.setAttribute(\"type\", \"number\");\n    if (target === salary) {\n        newInput.value = convertToNumber(originalText);\n        newInput.setAttribute(\"type\", \"number\");\n    }\n    target.innerText = \"\";\n    target.append(newInput);\n    newInput.focus();\n    var handleInput = function() {\n        if (newInput.name === SALARY_FIELD_NAME) target.innerText = \"$\" + newInput.value.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n        else target.innerText = newInput.value.trim() || originalText;\n    };\n    newInput.addEventListener(\"blur\", function() {\n        handleInput();\n    });\n    newInput.addEventListener(\"keypress\", function(press) {\n        if (press.key === \"Enter\") handleInput();\n    });\n}\ntableHeader.addEventListener(\"click\", function(e) {\n    if (e.target.cellIndex !== undefined) sortTable(e.target.cellIndex);\n});\ntableBody.addEventListener(\"click\", function(e) {\n    var targetRow = e.target.closest(\"tr\");\n    if (targetRow) {\n        Array.from(tableBody.rows).forEach(function(row) {\n            row.classList.remove(\"active\");\n        });\n        targetRow.classList.add(\"active\");\n    }\n});\nform.addEventListener(\"submit\", function(e) {\n    e.preventDefault();\n    handleFormSubmit();\n});\ntableBody.addEventListener(\"dblclick\", function(e) {\n    handeleDoubleClick(e.target);\n});\n\n//# sourceMappingURL=index.eec7d1b4.js.map\n","'use strict';\n\nconst body = document.body;\nconst table = document.querySelector('table');\nconst tableHeader = table.tHead;\nconst tableBody = table.tBodies[0];\nlet descendingOrder = false;\nconst form = createForm();\nconst notificationMessage = {\n  SuccsessMessage: {\n    title: 'Success message',\n    description: 'Employee was created',\n    type: 'success',\n  },\n  MainErrorMessage: {\n    title: 'Error message',\n    description: 'All filleds must be completed',\n    type: 'error',\n  },\n  WrongNameMessage: {\n    title: 'Wrong name',\n    description: 'The user name must contain at least 4 characters',\n    type: 'error',\n  },\n  WrongAgeMessage: {\n    title: 'Wrong age',\n    description: 'Age must be between 18 and 90',\n    type: 'error',\n  },\n  WrongPositionMessage: {\n    title: 'Wrong position',\n    description: 'Please write correct position',\n    type: 'error',\n  },\n};\nconst AGE_COLUMN_INDEX = 3;\nconst SALARY_COLUMN_INDEX = 4;\nconst SALARY_FIELD_NAME = 'salary';\n\nbody.append(form);\n\nfunction createForm() {\n  const newForm = document.createElement('form');\n\n  newForm.classList = 'new-employee-form';\n\n  newForm.innerHTML = `\n    <label>\n      Name: <input name=\"name\" type=\"text\" data-qa=\"name\" >\n    </label>\n    <label>\n      Position: <input name=\"position\" type=\"text\" data-qa=\"position\" >\n    </label>\n    <label>\n      Office:\n        <select name=\"office\" data-qa=\"office\">\n          <option value=\"Tokyo\">Tokyo</option>\n          <option value=\"Singapore\">Singapore</option>\n          <option value=\"London\">London</option>\n          <option value=\"New York\">New York</option>\n          <option value=\"Edinburgh\">Edinburgh</option>\n          <option value=\"San Francisco\">San Francisco</option>\n        </select>\n    </label>\n    <label>\n      Age: <input name=\"age\" type=\"number\" data-qa=\"age\" >\n    </label>\n    <label>\n      Salary: <input name=\"salary\" type=\"number\" data-qa=\"salary\" >\n    </label>\n    <button>\n      Save to table\n    </button>\n  `;\n\n  return newForm;\n}\n\nfunction sortTable(index) {\n  const sortedTable = [...tableBody.rows].sort((a, b) => {\n    const valueA = a.children[index].innerText;\n    const valueB = b.children[index].innerText;\n    const sortOrderMultiplier = descendingOrder ? -1 : 1;\n\n    if (index > 2) {\n      return sortOrderMultiplier\n        * (convertToNumber(valueA) - convertToNumber(valueB));\n    }\n\n    return descendingOrder\n      ? valueB.localeCompare(valueA)\n      : valueA.localeCompare(valueB);\n  });\n\n  tableBody.innerHTML = '';\n\n  tableBody.append(...sortedTable);\n  descendingOrder = !descendingOrder;\n}\n\nfunction convertToNumber(currencyString) {\n  return parseFloat(currencyString.replace(/[$,]/g, ''));\n}\n\nfunction handleFormSubmit() {\n  const data = new FormData(form);\n  const {\n    name: newName,\n    position,\n    age,\n    office,\n    salary,\n  } = Object.fromEntries(data.entries());\n\n  if (!newName || !age || !position || !salary) {\n    return showNotification(notificationMessage.MainErrorMessage);\n  }\n\n  if (newName.length < 4) {\n    return showNotification(notificationMessage.WrongNameMessage);\n  }\n\n  if (!isNaN(position)) {\n    return showNotification(notificationMessage.WrongPositionMessage);\n  }\n\n  if (age < 18 || age > 90) {\n    return showNotification(notificationMessage.WrongAgeMessage);\n  }\n\n  showNotification(notificationMessage.SuccsessMessage);\n\n  tableBody.insertAdjacentHTML(\n    'afterbegin',\n    `\n      <tr>\n        <td>${newName}</td>\n        <td>${position}</td>\n        <td>${office}</td>\n        <td>${age}</td>\n        <td>$${salary}</td>\n      </tr>\n    `,\n  );\n\n  form.reset();\n}\n\nfunction showNotification(message) {\n  const { title, description, type } = message;\n  const elementBox = document.createElement('div');\n\n  elementBox.classList.add('notification', type);\n  elementBox.setAttribute('data-qa', 'notification');\n\n  elementBox.innerHTML += `\n    <h2 class=\"title\">${title}</h2>\n    <p>${description}</p>\n  `;\n\n  document.body.appendChild(elementBox);\n\n  setTimeout(() => {\n    elementBox.remove();\n  }, 2000);\n}\n\nfunction handeleDoubleClick(target) {\n  const age = target.parentElement.children[AGE_COLUMN_INDEX];\n  const salary = target.parentElement.children[SALARY_COLUMN_INDEX];\n  const originalText = target.innerText;\n  const newInput = document.createElement('INPUT');\n\n  newInput.value = originalText;\n  newInput.classList.add('cell-input');\n\n  newInput.setAttribute(\n    'name',\n    tableHeader.rows[0].cells[target.cellIndex].innerText.toLocaleLowerCase(),\n  );\n\n  if (target === age) {\n    newInput.setAttribute('type', 'number');\n  }\n\n  if (target === salary) {\n    newInput.value = convertToNumber(originalText);\n    newInput.setAttribute('type', 'number');\n  }\n\n  target.innerText = '';\n  target.append(newInput);\n  newInput.focus();\n\n  const handleInput = () => {\n    if (newInput.name === SALARY_FIELD_NAME) {\n      target.innerText\n        = '$' + newInput.value.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    } else {\n      target.innerText = newInput.value.trim() || originalText;\n    }\n  };\n\n  newInput.addEventListener('blur', () => {\n    handleInput();\n  });\n\n  newInput.addEventListener('keypress', (press) => {\n    if (press.key === 'Enter') {\n      handleInput();\n    }\n  });\n}\n\ntableHeader.addEventListener('click', (e) => {\n  if (e.target.cellIndex !== undefined) {\n    sortTable(e.target.cellIndex);\n  }\n});\n\ntableBody.addEventListener('click', (e) => {\n  const targetRow = e.target.closest('tr');\n\n  if (targetRow) {\n    Array.from(tableBody.rows).forEach((row) => {\n      row.classList.remove('active');\n    });\n\n    targetRow.classList.add('active');\n  }\n});\n\nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n  handleFormSubmit();\n});\n\ntableBody.addEventListener('dblclick', (e) => {\n  handeleDoubleClick(e.target);\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","newForm","body","document","table","querySelector","tableHeader","tHead","tableBody","tBodies","descendingOrder","form","createElement","classList","innerHTML","notificationMessage","SuccsessMessage","title","description","type","MainErrorMessage","WrongNameMessage","WrongAgeMessage","WrongPositionMessage","convertToNumber","currencyString","parseFloat","replace","showNotification","message","elementBox","add","setAttribute","concat","appendChild","setTimeout","remove","append","addEventListener","e","undefined","target","cellIndex","sortTable","index","sortedTable","rows","sort","a","b","valueA","children","innerText","valueB","sortOrderMultiplier","localeCompare","apply","targetRow","closest","forEach","row","_Object_fromEntries","newName","position","age","office","salary","preventDefault","fromEntries","data","FormData","entries","isNaN","insertAdjacentHTML","reset","originalText","newInput","handleInput","parentElement","value","cells","toLocaleLowerCase","focus","trim","press","key"],"version":3,"file":"index.eec7d1b4.js.map"}